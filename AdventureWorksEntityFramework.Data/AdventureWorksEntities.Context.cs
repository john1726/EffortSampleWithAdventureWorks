//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdventureWorksEntityFramework.DataAccess
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;

    public partial class AdventureWorksEntities : DbContext, IAdventureWorksDbContext
    {
        public AdventureWorksEntities()
            : base("name=AdventureWorksEntities")
        {
        }
    
    	/// <summary>
        /// Constructs a new context instance using the given string as the name or connection
        /// string for the database to which a connection will be made.  See the DbContext class
        /// remarks for how this is used to create a connection.
        /// </summary>
        /// <param name="nameOrConnectionString">Either the database name or a connection string.</param>
    	public AdventureWorksEntities(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
    	/// <summary>
        /// Constructs a new context instance using the given DbConnection.
        /// The given connection will be disposed when this instance is disposed
        /// </summary>
        /// <param name="connection">The connection to create the context with</param>
    	public AdventureWorksEntities(DbConnection connection)
            : base(connection, true)
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
        public IDbSet<vProductProductInventory> vProductProductInventories { get; set; }
        public IDbSet<Product> Products { get; set; }
        public IDbSet<ProductInventory> ProductInventories { get; set; }

        public new IDbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            return base.Set<TEntity>();
        }
    }
}
